/*
Deployment script for EdkPocDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EdkPocDB"
:setvar DefaultFilePrefix "EdkPocDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Driver]...';


GO
CREATE TABLE [dbo].[Driver] (
    [id]                              UNIQUEIDENTIFIER NOT NULL,
    [createdDate]                     DATETIME2 (7)    NOT NULL,
    [modifiedDate]                    DATETIME2 (7)    NOT NULL,
    [driverfirstName]                 NVARCHAR (50)    NOT NULL,
    [driverMiddleInitial]             NVARCHAR (3)     NOT NULL,
    [driverlastName]                  NVARCHAR (50)    NOT NULL,
    [driverDOB]                       DATETIME2 (7)    NOT NULL,
    [yearFirstLicensed]               NVARCHAR (4)     NULL,
    [noOfTrafficTickets]              SMALLINT         NOT NULL,
    [noOfAtFaultAccidents]            SMALLINT         NOT NULL,
    [isDUI]                           BIT              NULL,
    [occupation]                      NVARCHAR (50)    NOT NULL,
    [oneWayDistanceFromHomeToWork]    INT              NULL,
    [noFaultAccidents]                SMALLINT         NULL,
    [isGraduateOfFourYearCollegeInUS] BIT              NULL,
    [isCGPA3]                         BIT              NULL,
    [additionalComments]              NTEXT            NULL,
    [isActive]                        BIT              NULL,
    [version]                         ROWVERSION       NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Feature]...';


GO
CREATE TABLE [dbo].[Feature] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [createdDate]  DATETIME2 (7)    NOT NULL,
    [modifiedDate] DATETIME2 (7)    NOT NULL,
    [Name]         NVARCHAR (256)   NULL,
    [Description]  NVARCHAR (256)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FeatureRole]...';


GO
CREATE TABLE [dbo].[FeatureRole] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [createdDate]  DATETIME2 (7)    NOT NULL,
    [modifiedDate] DATETIME2 (7)    NOT NULL,
    [RoleId]       UNIQUEIDENTIFIER NOT NULL,
    [FunctionId]   UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [createdDate]  DATETIME2 (7)    NOT NULL,
    [modifiedDate] DATETIME2 (7)    NOT NULL,
    [Name]         NVARCHAR (256)   NULL,
    [Description]  NVARCHAR (256)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [id]           UNIQUEIDENTIFIER NOT NULL,
    [createdDate]  DATETIME2 (7)    NOT NULL,
    [modifiedDate] DATETIME2 (7)    NOT NULL,
    [FirstName]    NVARCHAR (256)   NULL,
    [LastName]     NVARCHAR (256)   NULL,
    [CompanyName]  NVARCHAR (256)   NULL,
    [AltPhone]     NVARCHAR (256)   NULL,
    [Phone]        NVARCHAR (256)   NULL,
    [Email]        NVARCHAR (256)   NULL,
    [Username]     NVARCHAR (256)   NULL,
    [PasswordHash] NVARCHAR (256)   NULL,
    [PasswordSalt] NVARCHAR (256)   NULL,
    [IsActive]     BIT              NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[UserRole]...';


GO
CREATE TABLE [dbo].[UserRole] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [createdDate]  DATETIME2 (7)    NOT NULL,
    [modifiedDate] DATETIME2 (7)    NOT NULL,
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [RoleId]       UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Vehicle]...';


GO
CREATE TABLE [dbo].[Vehicle] (
    [ID]                UNIQUEIDENTIFIER NOT NULL,
    [createdDate]       DATETIME2 (7)    NOT NULL,
    [modifiedDate]      DATETIME2 (7)    NOT NULL,
    [VIN]               NVARCHAR (255)   NULL,
    [Make]              NVARCHAR (255)   NULL,
    [Year]              INT              NULL,
    [Model]             NVARCHAR (255)   NULL,
    [BodyStyle]         NVARCHAR (255)   NULL,
    [Trim]              NVARCHAR (255)   NULL,
    [EngineType]        NVARCHAR (255)   NULL,
    [TransmissionType]  NVARCHAR (255)   NULL,
    [DriveSystem]       NVARCHAR (255)   NULL,
    [FuelType]          NVARCHAR (255)   NULL,
    [WheelSize]         NVARCHAR (255)   NULL,
    [Story]             NVARCHAR (MAX)   NULL,
    [VINFound]          BIT              NULL,
    [TransmissionSpeed] NVARCHAR (255)   NULL,
    [Mileage]           INT              NULL,
    [ExteriorColorID]   UNIQUEIDENTIFIER NULL,
    [ListingID]         UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[VehicleBodytype]...';


GO
CREATE TABLE [dbo].[VehicleBodytype] (
    [ID]             INT            IDENTITY (1, 1) NOT NULL,
    [vehicleModelID] INT            NULL,
    [bodyType]       NVARCHAR (100) NOT NULL,
    [createdDate]    DATETIME2 (7)  NOT NULL,
    [modifiedDate]   DATETIME2 (7)  NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[VehicleInfo]...';


GO
CREATE TABLE [dbo].[VehicleInfo] (
    [id]                         UNIQUEIDENTIFIER NOT NULL,
    [createdDate]                DATETIME2 (7)    NOT NULL,
    [modifiedDate]               DATETIME2 (7)    NOT NULL,
    [vehicleId]                  UNIQUEIDENTIFIER NOT NULL,
    [mostFrequentDriverName]     NVARCHAR (50)    NULL,
    [milesDrivenAnnually]        NVARCHAR (10)    NOT NULL,
    [currentCarrier]             NVARCHAR (20)    NULL,
    [currentCarrierRenewalDate]  DATETIME2 (7)    NULL,
    [liabilityStateCode]         NVARCHAR (20)    NULL,
    [liabilityBodilyInjury]      NVARCHAR (20)    NULL,
    [liabilityPropertyDamage]    NVARCHAR (20)    NULL,
    [liabilityUninsuredMotorist] NVARCHAR (20)    NULL,
    [liabilityMedical]           NVARCHAR (20)    NULL,
    [carRentalPerDay]            NVARCHAR (20)    NULL,
    [deductibleComprehensive]    NVARCHAR (20)    NULL,
    [deductibleCollusion]        NVARCHAR (20)    NULL,
    [roadServiceTow]             BIT              NULL,
    [additionalComments]         NTEXT            NULL,
    [isActive]                   BIT              NULL,
    [version]                    ROWVERSION       NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[VehicleMake]...';


GO
CREATE TABLE [dbo].[VehicleMake] (
    [ID]           INT           IDENTITY (1, 1) NOT NULL,
    [make]         NVARCHAR (50) NOT NULL,
    [isCommon]     BIT           NOT NULL,
    [createdDate]  DATETIME2 (7) NOT NULL,
    [modifiedDate] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[VehicleModel]...';


GO
CREATE TABLE [dbo].[VehicleModel] (
    [ID]            INT           IDENTITY (1, 1) NOT NULL,
    [vehicleYearID] INT           NULL,
    [vehicleMakeID] INT           NULL,
    [model]         NVARCHAR (50) NOT NULL,
    [createdDate]   DATETIME2 (7) NOT NULL,
    [modifiedDate]  DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[VehicleYear]...';


GO
CREATE TABLE [dbo].[VehicleYear] (
    [ID]           INT           IDENTITY (1, 1) NOT NULL,
    [year]         NVARCHAR (50) NOT NULL,
    [createdDate]  DATETIME2 (7) NOT NULL,
    [modifiedDate] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ZipCode]...';


GO
CREATE TABLE [dbo].[ZipCode] (
    [Id]                UNIQUEIDENTIFIER  NOT NULL,
    [CreatedDate]       DATETIME2 (7)     NOT NULL,
    [ModifiedDate]      DATETIME2 (7)     NOT NULL,
    [Country]           VARCHAR (2)       NULL,
    [ZipCode]           VARCHAR (5)       NOT NULL,
    [City]              VARCHAR (200)     NULL,
    [STATE]             VARCHAR (50)      NULL,
    [StateAbbreviation] VARCHAR (2)       NULL,
    [County]            VARCHAR (50)      NULL,
    [Latitude]          DECIMAL (8, 5)    NOT NULL,
    [Longitude]         DECIMAL (8, 5)    NOT NULL,
    [GeoLocation]       [sys].[geography] NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT NEWID() FOR [id];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT GETDATE() FOR [driverDOB];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 0 FOR [noOfTrafficTickets];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 0 FOR [noOfAtFaultAccidents];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 0 FOR [isDUI];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 0 FOR [isGraduateOfFourYearCollegeInUS];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 0 FOR [isCGPA3];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 'no comments' FOR [additionalComments];


GO
PRINT N'Creating unnamed constraint on [dbo].[Driver]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD DEFAULT 1 FOR [isActive];


GO
PRINT N'Creating unnamed constraint on [dbo].[Feature]...';


GO
ALTER TABLE [dbo].[Feature]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[Feature]...';


GO
ALTER TABLE [dbo].[Feature]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Feature]...';


GO
ALTER TABLE [dbo].[Feature]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[FeatureRole]...';


GO
ALTER TABLE [dbo].[FeatureRole]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[FeatureRole]...';


GO
ALTER TABLE [dbo].[FeatureRole]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[FeatureRole]...';


GO
ALTER TABLE [dbo].[FeatureRole]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Role]...';


GO
ALTER TABLE [dbo].[Role]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[Role]...';


GO
ALTER TABLE [dbo].[Role]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Role]...';


GO
ALTER TABLE [dbo].[Role]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User]
    ADD DEFAULT NEWID() FOR [id];


GO
PRINT N'Creating unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[UserRole]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [dbo].[UserRole]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[UserRole]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Vehicle]...';


GO
ALTER TABLE [dbo].[Vehicle]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[Vehicle]...';


GO
ALTER TABLE [dbo].[Vehicle]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleBodytype]...';


GO
ALTER TABLE [dbo].[VehicleBodytype]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleBodytype]...';


GO
ALTER TABLE [dbo].[VehicleBodytype]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT NEWID() FOR [id];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT GETDATE() FOR [currentCarrierRenewalDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT 0 FOR [roadServiceTow];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT 'no comments' FOR [additionalComments];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleInfo]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD DEFAULT 1 FOR [isActive];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleMake]
    ADD DEFAULT 0 FOR [isCommon];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleMake]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleMake]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleModel]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleModel]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleYear]...';


GO
ALTER TABLE [dbo].[VehicleYear]
    ADD DEFAULT GETDATE() FOR [createdDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[VehicleYear]...';


GO
ALTER TABLE [dbo].[VehicleYear]
    ADD DEFAULT GETDATE() FOR [modifiedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[ZipCode]...';


GO
ALTER TABLE [dbo].[ZipCode]
    ADD DEFAULT GETDATE() FOR [CreatedDate];


GO
PRINT N'Creating unnamed constraint on [dbo].[ZipCode]...';


GO
ALTER TABLE [dbo].[ZipCode]
    ADD DEFAULT GETDATE() FOR [ModifiedDate];


GO
PRINT N'Creating [dbo].[FK_dbo.featureRole_dbo.role_id]...';


GO
ALTER TABLE [dbo].[FeatureRole]
    ADD CONSTRAINT [FK_dbo.featureRole_dbo.role_id] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.featureRole_dbo.function_id]...';


GO
ALTER TABLE [dbo].[FeatureRole]
    ADD CONSTRAINT [FK_dbo.featureRole_dbo.function_id] FOREIGN KEY ([FunctionId]) REFERENCES [dbo].[Feature] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.userRole_dbo.role_id]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD CONSTRAINT [FK_dbo.userRole_dbo.role_id] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Role] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.userRole_dbo.user_id]...';


GO
ALTER TABLE [dbo].[UserRole]
    ADD CONSTRAINT [FK_dbo.userRole_dbo.user_id] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Feature] ([Id]);


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleBodytype.vehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleBodytype]
    ADD CONSTRAINT [FK_dbo.VehicleBodytype.vehicleModel] FOREIGN KEY ([vehicleModelID]) REFERENCES [dbo].[VehicleModel] ([ID]);


GO
PRINT N'Creating [dbo].[FK_dbo.vehicleInfo.vehicleId]...';


GO
ALTER TABLE [dbo].[VehicleInfo]
    ADD CONSTRAINT [FK_dbo.vehicleInfo.vehicleId] FOREIGN KEY ([vehicleId]) REFERENCES [dbo].[Vehicle] ([ID]);


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleModel.vehicleYear]...';


GO
ALTER TABLE [dbo].[VehicleModel]
    ADD CONSTRAINT [FK_dbo.VehicleModel.vehicleYear] FOREIGN KEY ([vehicleYearID]) REFERENCES [dbo].[VehicleYear] ([ID]);


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleModel.vehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleModel]
    ADD CONSTRAINT [FK_dbo.VehicleModel.vehicleMake] FOREIGN KEY ([vehicleMakeID]) REFERENCES [dbo].[VehicleMake] ([ID]);


GO
PRINT N'Creating [dbo].[VehicleData_Upsert]...';


GO
--DROP PROCEDURE [dbo].[VehicleData_Upsert]
--GO
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO

-- =============================================
-- Author:		Naveen Karamchetti
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[VehicleData_Upsert]
(
	@Year VARCHAR(50),
	@Make VARCHAR(50),
	@Model VARCHAR(50),
	@BodyType VARCHAR(50)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	 

	--IF @CategoryId IS NULL
	--BEGIN
			DECLARE @tModel TABLE (ModelID INT);
			DECLARE @modelId INT;

			DECLARE @YearID INT;
			select @YearID = Id from VehicleYear where [year] = @Year;

			DECLARE @MakeID INT;
			select @MakeID = Id from VehicleMake where [make] = @Make;

			IF	@YearID IS NOT NULL 
			AND 
				@MakeID IS NOT NULL
			BEGIN
				-- NOTE: Check for data in the Model and body before inserting.
				insert into VehicleModel([vehicleYearID],[vehicleMakeID], model) 
				OUTPUT INSERTED.Id INTO @tModel
				values (@YearID, @MakeID, @Model);
				
				SELECT @modelId = ModelID FROM @tModel;

				insert into VehicleBodytype(vehicleModelID, [bodyType]) 
				values (@modelId, @BodyType);
			END 
			ELSE
			BEGIN
				DECLARE @tYear TABLE (YearID INT);	
				insert into VehicleYear([year])
				OUTPUT INSERTED.Id INTO @tYear
				values (@Year);
			   
				DECLARE @tMake TABLE (MakeID INT);
				insert into VehicleMake(make, isCommon) 
				OUTPUT INSERTED.Id INTO @tMake
				values (@Make, 0);

				--DECLARE @tModel TABLE (ModelID INT);

				insert into VehicleModel([vehicleYearID],[vehicleMakeID], model) 
				OUTPUT INSERTED.Id INTO @tModel
				values (@YearID, @MakeID, @Model);

				--DECLARE @modelId INT
				SELECT @modelId = ModelID FROM @tModel;

				insert into VehicleBodytype(vehicleModelID, [bodyType]) 
				values (@modelId, @BodyType);
			END
	--END ELSE 
	--BEGIN
	--	UPDATE [dbo].[Categories]
	--	   SET [ParentCategoryId] = @ParentCategoryId
	--		  ,[LocalizedCatalogId] = @LocalizedCatalogId
	--		  ,[CategoryCmsId] = @CategoryCmsId
	--		  ,[CategoryType] = @CategoryType
	--		  ,[Path] = @Path
	--		  ,[Depth]=@Depth
	--		  ,[Seq]= @Sequence
	--		  ,[UtcDateModfied] = GETUTCDATE()
	--	 WHERE CategoryId=@CategoryId


	--END
    
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

insert into VehicleYear([year]) values ('2015');
insert into VehicleYear([year]) values ('2014');
insert into VehicleYear([year]) values ('2013');
insert into VehicleYear([year]) values ('2012');
insert into VehicleYear([year]) values ('2011');
insert into VehicleYear([year]) values ('2010');
insert into VehicleYear([year]) values ('2009');
insert into VehicleYear([year]) values ('2008');
insert into VehicleYear([year]) values ('2007');

insert into VehicleMake(make, isCommon) values ('AUDI', 0);
insert into VehicleMake(make, isCommon) values ('BMW', 0);
insert into VehicleMake(make, isCommon) values ('BUICK', 0);
insert into VehicleMake(make, isCommon) values ('CADILLAC', 0);
insert into VehicleMake(make, isCommon) values ('CHEVROLET', 1);
insert into VehicleMake(make, isCommon) values ('CHEVROLET', 0);
insert into VehicleMake(make, isCommon) values ('CHRYSLER', 0);
insert into VehicleMake(make, isCommon) values ('DODGE', 1);
insert into VehicleMake(make, isCommon) values ('FIAT', 0);
insert into VehicleMake(make, isCommon) values ('TOYOTA', 1);
insert into VehicleMake(make, isCommon) values ('HONDA', 1);
insert into VehicleMake(make, isCommon) values ('NISSAN', 1);

DECLARE @YearID INT
select @YearID = Id from VehicleYear where [year] = '2015'

DECLARE @MakeID INT
select @MakeID = Id from VehicleMake where [make] = 'AUDI'

DECLARE @tModel TABLE (ModelID INT);

insert into VehicleModel([vehicleYearID],[vehicleMakeID], model) 
OUTPUT INSERTED.Id INTO @tModel
values (@YearID, @MakeID, 'A5 QUATTRO PRESTIGE');

DECLARE @modelId INT
SELECT @modelId = ModelID FROM @tModel;

insert into VehicleBodytype(vehicleModelID, [bodyType]) 
values (@modelId, 'CONVERTIBLE');


 
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
