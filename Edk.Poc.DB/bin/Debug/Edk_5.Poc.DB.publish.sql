/*
Deployment script for EdkPocDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EdkPocDB"
:setvar DefaultFilePrefix "EdkPocDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[VehicleMake].[vehicleYearID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[VehicleMake])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping unnamed constraint on [dbo].[VehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleMake] DROP CONSTRAINT [DF__VehicleMa__creat__4AB81AF0];


GO
PRINT N'Dropping unnamed constraint on [dbo].[VehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleMake] DROP CONSTRAINT [DF__VehicleMa__modif__4BAC3F29];


GO
PRINT N'Dropping unnamed constraint on [dbo].[VehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleModel] DROP CONSTRAINT [DF__VehicleMo__creat__4CA06362];


GO
PRINT N'Dropping unnamed constraint on [dbo].[VehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleModel] DROP CONSTRAINT [DF__VehicleMo__modif__4D94879B];


GO
PRINT N'Dropping [dbo].[FK_dbo.VehicleMake.vehicleYear]...';


GO
ALTER TABLE [dbo].[VehicleMake] DROP CONSTRAINT [FK_dbo.VehicleMake.vehicleYear];


GO
PRINT N'Dropping [dbo].[FK_dbo.VehicleModel.vehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleModel] DROP CONSTRAINT [FK_dbo.VehicleModel.vehicleMake];


GO
PRINT N'Dropping [dbo].[FK_dbo.VehicleBodytype.vehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleBodytype] DROP CONSTRAINT [FK_dbo.VehicleBodytype.vehicleModel];


GO
PRINT N'Starting rebuilding table [dbo].[VehicleMake]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_VehicleMake] (
    [ID]           INT           IDENTITY (1, 1) NOT NULL,
    [make]         NVARCHAR (50) NOT NULL,
    [isCommon]     BIT           DEFAULT 0 NOT NULL,
    [createdDate]  DATETIME2 (7) DEFAULT GETDATE() NOT NULL,
    [modifiedDate] DATETIME2 (7) DEFAULT GETDATE() NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[VehicleMake])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VehicleMake] ON;
        INSERT INTO [dbo].[tmp_ms_xx_VehicleMake] ([ID], [make], [createdDate], [modifiedDate])
        SELECT   [ID],
                 [make],
                 [createdDate],
                 [modifiedDate]
        FROM     [dbo].[VehicleMake]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VehicleMake] OFF;
    END

DROP TABLE [dbo].[VehicleMake];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_VehicleMake]', N'VehicleMake';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[VehicleModel]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_VehicleModel] (
    [ID]            INT           IDENTITY (1, 1) NOT NULL,
    [vehicleYearID] INT           NULL,
    [vehicleMakeID] INT           NULL,
    [model]         NVARCHAR (50) NOT NULL,
    [createdDate]   DATETIME2 (7) DEFAULT GETDATE() NOT NULL,
    [modifiedDate]  DATETIME2 (7) DEFAULT GETDATE() NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[VehicleModel])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VehicleModel] ON;
        INSERT INTO [dbo].[tmp_ms_xx_VehicleModel] ([ID], [vehicleMakeID], [model], [createdDate], [modifiedDate])
        SELECT   [ID],
                 [vehicleMakeID],
                 [model],
                 [createdDate],
                 [modifiedDate]
        FROM     [dbo].[VehicleModel]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_VehicleModel] OFF;
    END

DROP TABLE [dbo].[VehicleModel];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_VehicleModel]', N'VehicleModel';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleModel.vehicleMake]...';


GO
ALTER TABLE [dbo].[VehicleModel] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.VehicleModel.vehicleMake] FOREIGN KEY ([vehicleMakeID]) REFERENCES [dbo].[VehicleMake] ([ID]);


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleBodytype.vehicleModel]...';


GO
ALTER TABLE [dbo].[VehicleBodytype] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.VehicleBodytype.vehicleModel] FOREIGN KEY ([vehicleModelID]) REFERENCES [dbo].[VehicleModel] ([ID]);


GO
PRINT N'Creating [dbo].[FK_dbo.VehicleModel.vehicleYear]...';


GO
ALTER TABLE [dbo].[VehicleModel] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo.VehicleModel.vehicleYear] FOREIGN KEY ([vehicleYearID]) REFERENCES [dbo].[VehicleYear] ([ID]);


GO
PRINT N'Altering [dbo].[VehicleData_Upsert]...';


GO
--DROP PROCEDURE [dbo].[VehicleData_Upsert]
--GO
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO

-- =============================================
-- Author:		Naveen Karamchetti
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[VehicleData_Upsert]
(
	@Year VARCHAR(50),
	@Make VARCHAR(50),
	@Model VARCHAR(50),
	@BodyType VARCHAR(50)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	 

	--IF @CategoryId IS NULL
	--BEGIN
		DECLARE @tt TABLE (TempID INT);

		--insert into VehicleYear([year]) 
		--OUTPUT INSERTED.Id INTO @tt
		--values (@Year);

		--DECLARE @uId INT;
		--SELECT @uId = TempID FROM @tt; 

		--insert into VehicleMake(vehicleYearID, make) 
		--OUTPUT INSERTED.Id INTO @tt
		--values (@uId, @Make);

		--SELECT @uId = TempID FROM @tt; 

		--insert into VehicleModel(vehicleMakeID, model) 
		--OUTPUT INSERTED.Id INTO @tt
		--values (@uId, @Model);

		--SELECT @uId = TempID FROM @tt;

		--insert into VehicleBodytype(vehicleModelID, bodyType) 
		--OUTPUT INSERTED.Id INTO @tt
		--values (@uId, @BodyType);
	--		SET @CategoryId=SCOPE_IDENTITY()

	--END ELSE 
	--BEGIN
	--	UPDATE [dbo].[Categories]
	--	   SET [ParentCategoryId] = @ParentCategoryId
	--		  ,[LocalizedCatalogId] = @LocalizedCatalogId
	--		  ,[CategoryCmsId] = @CategoryCmsId
	--		  ,[CategoryType] = @CategoryType
	--		  ,[Path] = @Path
	--		  ,[Depth]=@Depth
	--		  ,[Seq]= @Sequence
	--		  ,[UtcDateModfied] = GETUTCDATE()
	--	 WHERE CategoryId=@CategoryId


	--END
    
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

insert into VehicleYear([year]) values (2015);
insert into VehicleYear([year]) values (2014);
insert into VehicleYear([year]) values (2013);
insert into VehicleYear([year]) values (2012);
insert into VehicleYear([year]) values (2011);
insert into VehicleYear([year]) values (2010);
insert into VehicleYear([year]) values (2009);
insert into VehicleYear([year]) values (2008);
insert into VehicleYear([year]) values (2007);

insert into VehicleMake(make, isCommon) values ('AUDI', 0);
insert into VehicleMake(make, isCommon) values ('BMW', 0);
insert into VehicleMake(make, isCommon) values ('BUICK', 0);
insert into VehicleMake(make, isCommon) values ('CADILLAC', 0);
insert into VehicleMake(make, isCommon) values ('CHEVROLET', 1);
insert into VehicleMake(make, isCommon) values ('CHEVROLET', 0);
insert into VehicleMake(make, isCommon) values ('CHRYSLER', 0);
insert into VehicleMake(make, isCommon) values ('DODGE', 1);
insert into VehicleMake(make, isCommon) values ('FIAT', 0);
insert into VehicleMake(make, isCommon) values ('TOYOTA', 1);
insert into VehicleMake(make, isCommon) values ('HONDA', 1);
insert into VehicleMake(make, isCommon) values ('NISSAN', 1);

--DECLARE @tYear TABLE (YearID INT);
--DECLARE @tMake TABLE (MakeID INT);

--select @tYear = Id from VehicleYear where [year] = '2015'
--select @tMake = Id from VehicleMake where [make] = 'AUDI'


--DECLARE @uId INT;
--SELECT @uId = TempID FROM @tt; 

--insert into VehicleModel(vehicleMakeID, model) 
--OUTPUT INSERTED.Id INTO @tt
--values (@uId, 'A5 QUATTRO PRESTIGE');

--SELECT @uId = TempID FROM @tt;

--insert into VehicleBodytype(vehicleModelID, bodyType) 
--OUTPUT INSERTED.Id INTO @tt
--values (@uId, 'CONVERTIBLE');


 
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[VehicleModel] WITH CHECK CHECK CONSTRAINT [FK_dbo.VehicleModel.vehicleMake];

ALTER TABLE [dbo].[VehicleBodytype] WITH CHECK CHECK CONSTRAINT [FK_dbo.VehicleBodytype.vehicleModel];

ALTER TABLE [dbo].[VehicleModel] WITH CHECK CHECK CONSTRAINT [FK_dbo.VehicleModel.vehicleYear];


GO
PRINT N'Update complete.';


GO
